#ifndef WS2801_H
#define WS2801_H


/*
Uses  WS2801 RGB driver chip to output RGB colors.
Uses SPI interface.
When programming chip, colors should probably appear... :)

*/


#include <types.h>
#include <avr/pgmspace.h>
#include <util/atomic.h>

#include "../../spi/spi.h"


#define RGB_PORT			PORTB
#define RGB_DDR				DDRB

#define RGB_DRVR_POL		PORTD6


#define RGB_RED				2
#define RGB_GREEN			1
#define RGB_BLUE			0


void RGBInit(void);
void RGBUpdateHandler(void);
void SetSOCColor(BYTE soc);


// maps percentage values of 0-100 to 3 RGB color values
// color map starts at 0 and progresses through  :)
/*
%	value		color
---	-----		------
0	0x440000	dim red
10	0x880000
20	0xFF0000	
30	0xFF8800
40	0xFFFF00
50	0x88FF00
60	0x00FF00	green
70	0x00FF88
80	0x00FFFF	teal
90	0x0088FF	green+blue
100	0x0000FF	blue

*/
const static unsigned char COLOR_MAP[] PROGMEM = {
	0xFF, 0x00, 0x00,		//   0
	0xFF, 0x00, 0x00,		//   1
	0xFF, 0x00, 0x00,		//   2
	0xFF, 0x00, 0x00,		//   3
	0xFF, 0x00, 0x00,		//   4
	0xFF, 0x00, 0x00,		//   5
	0xFF, 0x00, 0x00,		//   6
	0xFF, 0x00, 0x00,		//   7
	0xFF, 0x00, 0x00,		//   8
	0xFF, 0x00, 0x00,		//   9
	0xFF, 0x00, 0x00,		//  10
	0xFF, 0x00, 0x00,		//  11
	0xFF, 0x00, 0x00,		//  12
	0xFF, 0x00, 0x00,		//  13
	0xFF, 0x00, 0x00,		//  14
	0xFF, 0x00, 0x00,		//  15
	0xFF, 0x00, 0x00,		//  16
	0xFF, 0x00, 0x00,		//  17
	0xFF, 0x00, 0x00,		//  18
	0xFF, 0x00, 0x00,		//  19
	0xFF, 0x00, 0x00,		//  20
	0xFF, 0x08, 0x00,		//  21
	0xFF, 0x11, 0x00,		//  22
	0xFF, 0x1A, 0x00,		//  23
	0xFF, 0x22, 0x00,		//  24
	0xFF, 0x2A, 0x00,		//  25
	0xFF, 0x33, 0x00,		//  26
	0xFF, 0x3C, 0x00,		//  27
	0xFF, 0x44, 0x00,		//  28
	0xFF, 0x4C, 0x00,		//  29
	0xFF, 0x55, 0x00,		//  30
	0xFF, 0x5E, 0x00,		//  31
	0xFF, 0x66, 0x00,		//  32
	0xFF, 0x6E, 0x00,		//  33
	0xFF, 0x77, 0x00,		//  34
	0xFF, 0x80, 0x00,		//  35
	0xFF, 0x88, 0x00,		//  36
	0xFF, 0x90, 0x00,		//  37
	0xFF, 0x99, 0x00,		//  38
	0xFF, 0xA2, 0x00,		//  39
	0xFF, 0xAA, 0x00,		//  40
	0xF6, 0xB2, 0x00,		//  41
	0xEE, 0xBB, 0x00,		//  42
	0xE6, 0xC4, 0x00,		//  43
	0xDD, 0xCC, 0x00,		//  44
	0xD4, 0xD4, 0x00,		//  45
	0xCC, 0xDD, 0x00,		//  46
	0xC4, 0xE6, 0x00,		//  47
	0xBB, 0xEE, 0x00,		//  48
	0xB2, 0xF6, 0x00,		//  49
	0xAA, 0xFF, 0x00,		//  50
	0xA2, 0xFF, 0x00,		//  51
	0x99, 0xFF, 0x00,		//  52
	0x90, 0xFF, 0x00,		//  53
	0x88, 0xFF, 0x00,		//  54
	0x80, 0xFF, 0x00,		//  55
	0x77, 0xFF, 0x00,		//  56
	0x6E, 0xFF, 0x00,		//  57
	0x66, 0xFF, 0x00,		//  58
	0x5E, 0xFF, 0x00,		//  59
	0x55, 0xFF, 0x00,		//  60
	0x4C, 0xFF, 0x08,		//  61
	0x44, 0xFF, 0x11,		//  62
	0x3C, 0xFF, 0x1A,		//  63
	0x33, 0xFF, 0x22,		//  64
	0x2A, 0xFF, 0x2A,		//  65
	0x22, 0xFF, 0x33,		//  66
	0x1A, 0xFF, 0x3C,		//  67
	0x11, 0xFF, 0x44,		//  68
	0x08, 0xFF, 0x4C,		//  69
	0x00, 0xFF, 0x55,		//  70
	0x00, 0xFF, 0x5E,		//  71
	0x00, 0xFF, 0x66,		//  72
	0x00, 0xFF, 0x6E,		//  73
	0x00, 0xFF, 0x77,		//  74
	0x00, 0xFF, 0x80,		//  75
	0x00, 0xFF, 0x88,		//  76
	0x00, 0xFF, 0x90,		//  77
	0x00, 0xFF, 0x99,		//  78
	0x00, 0xFF, 0xA2,		//  79
	0x00, 0xFF, 0xAA,		//  80
	0x00, 0xF6, 0xB2,		//  81
	0x00, 0xEE, 0xBB,		//  82
	0x00, 0xE6, 0xC4,		//  83
	0x00, 0xDD, 0xCC,		//  84
	0x00, 0xD4, 0xD4,		//  85
	0x00, 0xCC, 0xDD,		//  86
	0x00, 0xC4, 0xE6,		//  87
	0x00, 0xBB, 0xEE,		//  88
	0x00, 0xB2, 0xF6,		//  89
	0x00, 0xAA, 0xFF,		//  90
	0x00, 0xA2, 0xFF,		//  91
	0x00, 0x99, 0xFF,		//  92
	0x00, 0x90, 0xFF,		//  93
	0x00, 0x88, 0xFF,		//  94
	0x00, 0x80, 0xFF,		//  95
	0x00, 0x77, 0xFF,		//  96
	0x00, 0x6E, 0xFF,		//  97
	0x00, 0x66, 0xFF,		//  98
	0x00, 0x5E, 0xFF,		//  99
	0x00, 0x55, 0xFF		// 100
};

#endif
